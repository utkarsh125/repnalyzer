generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Organization {
  id            String       @id @default(cuid())
  name          String       @unique
  repositories  Repository[]
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
}

model Repository {
  id             String         @id @default(cuid())
  name           String
  orgId          String
  organization   Organization   @relation(fields: [orgId], references: [id])
  alerts         Alert[]
  apiEndpoints   ApiEndpoint[]
  apiKeys        ApiKey[]
  apiConnections ApiConnection[]
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
}

model Alert {
  id           String     @id @default(cuid())
  repoId       String
  repository   Repository @relation(fields: [repoId], references: [id])
  alertType    String     // e.g., "dependabot" or "code-scanning"
  severity     String
  description  String
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}

model ApiEndpoint {
  id           Int        @id @default(autoincrement())
  endpoint     String
  repository   Repository @relation(fields: [repositoryId], references: [id])
  repositoryId String
  createdAt    DateTime   @default(now())
}

model ApiKey {
  id           Int        @id @default(autoincrement())
  key          String
  repository   Repository @relation(fields: [repositoryId], references: [id])
  repositoryId String
  createdAt    DateTime   @default(now())
}

model ApiConnection {
  id             Int        @id @default(autoincrement())
  repository     Repository @relation(fields: [repositoryId], references: [id])
  repositoryId   String
  connectionType String     // e.g. "webhook", "integration"
  identifier     String     // Unique identifier (e.g. webhook id or installation id)
  config         String     // JSON string with details
  createdAt      DateTime   @default(now())
}
